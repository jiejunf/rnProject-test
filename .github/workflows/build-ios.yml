name: Build iOS

on:
  push:
    branches: [master]
#  pull_request:
#    branches: [master]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install React Native CLI
        run: yarn global add react-native-cli
      - name: Install yarn dependecies
        run: yarn install
      - name: Building bundle
        run: yarn react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle --assets-dest ios
      - name: Install pods
        run: cd ios; pod install
      - name: Check iOS project directory before build
        run: ls -l ios
      - name: Build iOS Action
        uses: sparkfabrik/ios-build-action@v1.2.0
        with:
          project-path: ios/rnProject.xcodeproj
          p12-base64: ${{ secrets.P12_BASE64 }} # Required if single file: Base64 encoded p12 file (key + cert).
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }} # Required Base64 encoded mobileprovision file.
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }} # Required For example, "iPhone Distribution", "Apple Development"
          team-id: ${{ secrets.TEAM_ID }} # Required Team id.
          workspace-path: ios/rnProject.xcworkspace # optional
      #          build-pods: true
      #          pods-path: project/ios/Podfile
      - name: Check project directory after build
        run: ls -l
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: output.ipa
          path: ./output.ipa
      #      - name: 'Upload app to TestFlight'
      #        uses: apple-actions/upload-testflight-build@v1
      #        with:
      #          app-path: 'output.ipa'
      #          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
      #          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      # - name: Upload app to App Store Connect
      #   env:
      #     APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_SECRET_NAME }}
      #     APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_SECRET_CRED }}
      #   run: |
      #     xcrun altool --upload-app -t ios -f "output.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
